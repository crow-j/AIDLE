import os
import numpy as np
import pandas as pd

#!pip install eml_parser

import datetime
import eml_parser

def toDataFrame(idx, key, value, column):
    col = column + '/' + key
    eml_df = pd.DataFrame()
    
    if type(value) == type(dict()):
        for k in value:
            eml_df = pd.concat([eml_df, toDataFrame(idx, k, value[k], col)], axis=1)
            
    elif type(value) == type(list()):
        v = ''
        for i, d in enumerate(value):
            if type(d) == type(dict()):
                eml_df = pd.concat([eml_df, toDataFrame(idx, str(i), d, col)], axis=1)
            elif type(d) == type(str()):
                v += d
        eml_df = pd.concat([eml_df, pd.DataFrame(data={col: v}, index=[idx])], axis=1)
    
    else:     #str, datetime.datetime
        eml_df = pd.DataFrame(data={col: value}, index=[idx])
        
    return eml_df
    
def html_parsing(idx, file_path):
    header = {}
    f = open(file_path, 'r', encoding='utf-8' )
    isbody = False
    while True:
        line = f.readline()
        if not line:
            break

        if '<html>' in line:
            isbody = True
            header['html'] = 'line'
        if isbody == True:
            header['html'] += line
            if '<html>' in line:
                ishtml = False
    return pd.DataFrame(data=header, index=[idx])
    
def parsing(folder):
    file_list = os.listdir(folder)
    
    emls_df = pd.DataFrame()    
    #count = 0
    for i, file in enumerate(file_list):
        #if count == 50:     # parsing할 eml 파일 수 선택
        #    break
        #count += 1
        #if file == '.ipynb_checkpoints' or file =='eml':
        #    continue
        if not (file[0] == '0' or file[0] == '1'):  # 각자 시작하는 16진수 선택
            break
        print(file) # 진행상태 알고 싶으면 print
        
        #### eml-parsing ####
        file_path = os.path.join(folder, file)
        with open(file_path, 'rb') as fhdl:
          raw_email = fhdl.read()

        ep = eml_parser.EmlParser()
        try:
            parsed_eml = ep.decode_email_bytes(raw_email)
        except:
            print('**', file)
    
        #### to DataFrame ####
        if type(parsed_eml['body']) != type(list()):
            print('body type ', type(parsed_eml['body']))
        else:
            eml_df = toDataFrame(i, 'body', parsed_eml['body'], '')
            
        if type(parsed_eml['header']) != type(dict()):
            print('header type ', type(parsed_eml['header']))
        else:
            eml_df = pd.concat([eml_df, toDataFrame(i, 'header', parsed_eml['header'], '')], axis=1)
            
        #### html-parsing ####
        eml_df = pd.concat([eml_df, html_parsing(i, file_path)], axis=1)
        
        try:
            emls_df = pd.concat([emls_df, eml_df])  
        except:
            print(parsed_eml)
            for c in eml_df.columns:
                print(c)
            print()
        
    return emls_df
    
eml_df = parsing('dataset/eml')
eml_df.to_csv('./test.csv')
